/** THIS IS AN AUTOMATICALLY GENERATED FILE.  DO NOT MODIFY
 * BY HAND!!
 *
 * Generated by lcm-gen
 **/

#include <stdint.h>
#include <stdlib.h>
#include <lcm/lcm_coretypes.h>
#include <lcm/lcm.h>

#ifndef _lcmt_drake_signal_h
#define _lcmt_drake_signal_h

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _lcmt_drake_signal lcmt_drake_signal;
struct _lcmt_drake_signal
{
    int32_t    dim;
    double     *val;
    char*      *coord;
    int64_t    timestamp;
};

lcmt_drake_signal   *lcmt_drake_signal_copy(const lcmt_drake_signal *p);
void lcmt_drake_signal_destroy(lcmt_drake_signal *p);

typedef struct _lcmt_drake_signal_subscription_t lcmt_drake_signal_subscription_t;
typedef void(*lcmt_drake_signal_handler_t)(const lcm_recv_buf_t *rbuf,
             const char *channel, const lcmt_drake_signal *msg, void *user);

int lcmt_drake_signal_publish(lcm_t *lcm, const char *channel, const lcmt_drake_signal *p);
lcmt_drake_signal_subscription_t* lcmt_drake_signal_subscribe(lcm_t *lcm, const char *channel, lcmt_drake_signal_handler_t f, void *userdata);
int lcmt_drake_signal_unsubscribe(lcm_t *lcm, lcmt_drake_signal_subscription_t* hid);
int lcmt_drake_signal_subscription_set_queue_capacity(lcmt_drake_signal_subscription_t* subs,
                              int num_messages);


int  lcmt_drake_signal_encode(void *buf, int offset, int maxlen, const lcmt_drake_signal *p);
int  lcmt_drake_signal_decode(const void *buf, int offset, int maxlen, lcmt_drake_signal *p);
int  lcmt_drake_signal_decode_cleanup(lcmt_drake_signal *p);
int  lcmt_drake_signal_encoded_size(const lcmt_drake_signal *p);

// LCM support functions. Users should not call these
int64_t __lcmt_drake_signal_get_hash(void);
int64_t __lcmt_drake_signal_hash_recursive(const __lcm_hash_ptr *p);
int     __lcmt_drake_signal_encode_array(void *buf, int offset, int maxlen, const lcmt_drake_signal *p, int elements);
int     __lcmt_drake_signal_decode_array(const void *buf, int offset, int maxlen, lcmt_drake_signal *p, int elements);
int     __lcmt_drake_signal_decode_array_cleanup(lcmt_drake_signal *p, int elements);
int     __lcmt_drake_signal_encoded_array_size(const lcmt_drake_signal *p, int elements);
int     __lcmt_drake_signal_clone_array(const lcmt_drake_signal *p, lcmt_drake_signal *q, int elements);

#ifdef __cplusplus
}
#endif

#endif
